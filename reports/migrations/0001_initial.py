# Generated by Django 5.2.3 on 2025-06-25 12:48

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('report_type', models.CharField(choices=[('employee', 'Employee'), ('attendance', 'Attendance'), ('payroll', 'Payroll'), ('accommodation', 'Accommodation'), ('tracking', 'Tracking'), ('custom', 'Custom')], default='custom', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('data_source', models.CharField(help_text='Database table or view used as data source', max_length=100)),
                ('filters', models.JSONField(blank=True, default=dict, help_text='Filter criteria for the report')),
                ('columns', models.JSONField(blank=True, default=list, help_text='Columns to include in the report')),
                ('sorting', models.JSONField(blank=True, default=list, help_text='Sorting configuration')),
                ('grouping', models.JSONField(blank=True, default=list, help_text='Grouping configuration')),
                ('chart_config', models.JSONField(blank=True, default=dict, help_text='Chart configuration if applicable')),
                ('default_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('html', 'HTML'), ('json', 'JSON')], default='pdf', max_length=10)),
                ('is_system', models.BooleanField(default=False, help_text='Whether this is a system-defined report')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this report is accessible to all users')),
                ('allowed_roles', models.JSONField(blank=True, default=list, help_text='Roles allowed to access this report')),
                ('custom_sql', models.TextField(blank=True, help_text='Custom SQL query for advanced reports', null=True)),
                ('parameters', models.JSONField(blank=True, default=list, help_text='User-configurable parameters for the report')),
                ('allowed_users', models.ManyToManyField(blank=True, help_text='Users allowed to access this report', related_name='accessible_reports', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('once', 'One Time')], default='monthly', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Optional end date for the schedule', null=True)),
                ('time_of_day', models.TimeField(default=datetime.time(6, 0), help_text='Time of day to generate the report')),
                ('day_of_week', models.PositiveIntegerField(blank=True, help_text='Day of week for weekly reports (0=Monday, 6=Sunday)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('day_of_month', models.PositiveIntegerField(blank=True, help_text='Day of month for monthly reports', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('month_of_year', models.PositiveIntegerField(blank=True, help_text='Month of year for yearly reports', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('html', 'HTML'), ('json', 'JSON')], default='pdf', max_length=10)),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Parameters to use when generating the report')),
                ('recipients', models.JSONField(blank=True, default=list, help_text='List of user IDs to receive the report')),
                ('recipient_groups', models.JSONField(blank=True, default=list, help_text='List of group IDs to receive the report')),
                ('email_subject', models.CharField(blank=True, help_text='Subject line for email delivery', max_length=255, null=True)),
                ('email_body', models.TextField(blank=True, help_text='Body text for email delivery', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this schedule is active')),
                ('last_run', models.DateTimeField(blank=True, help_text='When the report was last generated', null=True)),
                ('next_run', models.DateTimeField(blank=True, help_text='When the report is next scheduled to run', null=True)),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reports.report')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_active', 'next_run'],
            },
        ),
        migrations.CreateModel(
            name='ReportData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('html', 'HTML'), ('json', 'JSON')], default='pdf', max_length=10)),
                ('file_path', models.CharField(blank=True, help_text='Path to the generated report file', max_length=255, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='Size of the generated file in bytes', null=True)),
                ('data', models.JSONField(blank=True, default=dict, help_text='Raw data used to generate the report')),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Parameters used to generate the report')),
                ('execution_time', models.PositiveIntegerField(blank=True, help_text='Time taken to generate the report in milliseconds', null=True)),
                ('row_count', models.PositiveIntegerField(blank=True, help_text='Number of data rows in the report', null=True)),
                ('is_cached', models.BooleanField(default=False, help_text='Whether this report data is cached')),
                ('cache_expiry', models.DateTimeField(blank=True, help_text='When the cached data expires', null=True)),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='reports.report')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(blank=True, help_text='Schedule that generated this report, if any', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to='reports.reportschedule')),
            ],
            options={
                'verbose_name_plural': 'Report data',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('template_type', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('html', 'HTML'), ('json', 'JSON')], default='html', max_length=10)),
                ('content', models.TextField(help_text='Template content with placeholders')),
                ('css_style', models.TextField(blank=True, help_text='CSS styling for HTML templates', null=True)),
                ('header_content', models.TextField(blank=True, help_text='Content for report header', null=True)),
                ('footer_content', models.TextField(blank=True, help_text='Content for report footer', null=True)),
                ('page_size', models.CharField(default='A4', help_text='Page size for PDF templates', max_length=20)),
                ('orientation', models.CharField(choices=[('portrait', 'Portrait'), ('landscape', 'Landscape')], default='portrait', help_text='Page orientation for PDF templates', max_length=20)),
                ('variables', models.JSONField(blank=True, default=list, help_text='List of variables/placeholders used in the template')),
                ('is_system', models.BooleanField(default=False, help_text='Whether this is a system-defined template')),
                ('thumbnail', models.CharField(blank=True, help_text='Path to template thumbnail image', max_length=255, null=True)),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='report',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to='reports.reporttemplate'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['report', 'is_active'], name='reports_rep_report__b6440c_idx'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['next_run'], name='reports_rep_next_ru_8865e3_idx'),
        ),
        migrations.AddIndex(
            model_name='reportdata',
            index=models.Index(fields=['report', 'created_at'], name='reports_rep_report__bbfa5a_idx'),
        ),
        migrations.AddIndex(
            model_name='reportdata',
            index=models.Index(fields=['generated_by', 'created_at'], name='reports_rep_generat_740219_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['report_type'], name='reports_rep_report__dbb097_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['status'], name='reports_rep_status_c732ef_idx'),
        ),
    ]
