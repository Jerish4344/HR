# Generated by Django 5.2.3 on 2025-06-25 12:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('accommodation_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('dormitory', 'Dormitory'), ('shared_room', 'Shared Room'), ('single_room', 'Single Room'), ('villa', 'Villa'), ('other', 'Other')], default='apartment', max_length=20)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('under_maintenance', 'Under Maintenance'), ('reserved', 'Reserved'), ('decommissioned', 'Decommissioned')], default='available', max_length=20)),
                ('capacity', models.PositiveIntegerField(default=1, help_text='Number of people this accommodation can house')),
                ('bedrooms', models.PositiveIntegerField(default=1)),
                ('bathrooms', models.PositiveIntegerField(default=1)),
                ('area_sqft', models.DecimalField(blank=True, decimal_places=2, help_text='Area in square feet', max_digits=10, null=True)),
                ('floor', models.CharField(blank=True, help_text='Floor number or description', max_length=10, null=True)),
                ('building', models.CharField(blank=True, help_text='Building name or number', max_length=100, null=True)),
                ('rent_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly rent amount', max_digits=10, null=True)),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Security deposit amount', max_digits=10, null=True)),
                ('lease_start_date', models.DateField(blank=True, null=True)),
                ('lease_end_date', models.DateField(blank=True, null=True)),
                ('landlord_name', models.CharField(blank=True, max_length=100, null=True)),
                ('landlord_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('is_company_owned', models.BooleanField(default=True, help_text='Whether this accommodation is owned by the company or leased')),
                ('amenities', models.JSONField(blank=True, default=list, help_text='List of amenities available')),
                ('furnishing_status', models.CharField(choices=[('unfurnished', 'Unfurnished'), ('semi_furnished', 'Semi-Furnished'), ('fully_furnished', 'Fully Furnished')], default='fully_furnished', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('images', models.JSONField(blank=True, default=list, help_text='List of image URLs')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accommodations', to='core.address')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AccommodationAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this allocation is currently active')),
                ('rent_deduction', models.BooleanField(default=True, help_text='Whether rent should be deducted from salary')),
                ('rent_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly rent amount to be deducted', max_digits=10, null=True)),
                ('allocation_type', models.CharField(choices=[('permanent', 'Permanent'), ('temporary', 'Temporary')], default='permanent', max_length=20)),
                ('check_in_notes', models.TextField(blank=True, null=True)),
                ('check_out_notes', models.TextField(blank=True, null=True)),
                ('check_in_inventory', models.JSONField(blank=True, default=dict, help_text='Inventory at check-in')),
                ('check_out_inventory', models.JSONField(blank=True, default=dict, help_text='Inventory at check-out')),
                ('accommodation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='accommodation.accommodation')),
                ('allocated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocations_made', to='employees.employee')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('occupants', models.ManyToManyField(help_text='All occupants including the primary occupant', related_name='accommodations', to='employees.employee')),
                ('primary_occupant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_accommodations', to='employees.employee')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request_type', models.CharField(choices=[('plumbing', 'Plumbing'), ('electrical', 'Electrical'), ('hvac', 'HVAC'), ('structural', 'Structural'), ('appliance', 'Appliance'), ('furniture', 'Furniture'), ('pest_control', 'Pest Control'), ('cleaning', 'Cleaning'), ('other', 'Other')], default='other', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('emergency', 'Emergency')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('requested_date', models.DateField(auto_now_add=True)),
                ('scheduled_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated cost of repair', max_digits=10, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Actual cost of repair', max_digits=10, null=True)),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('images_before', models.JSONField(blank=True, default=list, help_text='List of image URLs before repair')),
                ('images_after', models.JSONField(blank=True, default=list, help_text='List of image URLs after repair')),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('rating', models.PositiveIntegerField(blank=True, help_text='Rating from 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('accommodation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='accommodation.accommodation')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_maintenance_requests', to='employees.employee')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='employees.employee')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-requested_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='UtilityReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('utility_type', models.CharField(choices=[('electricity', 'Electricity'), ('water', 'Water'), ('gas', 'Gas'), ('internet', 'Internet'), ('cable', 'Cable TV'), ('other', 'Other')], default='electricity', max_length=20)),
                ('reading_date', models.DateField()),
                ('reading_value', models.DecimalField(decimal_places=2, help_text='Meter reading value', max_digits=10)),
                ('unit', models.CharField(default='kWh', help_text='Unit of measurement (kWh, cubic meters, etc.)', max_length=20)),
                ('is_initial_reading', models.BooleanField(default=False, help_text='Whether this is the initial reading for a new allocation')),
                ('is_final_reading', models.BooleanField(default=False, help_text='Whether this is the final reading for an ended allocation')),
                ('bill_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Bill amount based on this reading', max_digits=10, null=True)),
                ('bill_paid', models.BooleanField(default=False, help_text='Whether the bill has been paid')),
                ('bill_paid_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('image', models.CharField(blank=True, help_text='Image of the meter reading', max_length=255, null=True)),
                ('accommodation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utility_readings', to='accommodation.accommodation')),
                ('allocation', models.ForeignKey(blank=True, help_text='Associated allocation if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utility_readings', to='accommodation.accommodationallocation')),
                ('bill_paid_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paid_utility_bills', to='employees.employee')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-reading_date', 'accommodation'],
            },
        ),
        migrations.AddIndex(
            model_name='accommodation',
            index=models.Index(fields=['status'], name='accommodati_status_471154_idx'),
        ),
        migrations.AddIndex(
            model_name='accommodation',
            index=models.Index(fields=['accommodation_type'], name='accommodati_accommo_661767_idx'),
        ),
        migrations.AddIndex(
            model_name='accommodationallocation',
            index=models.Index(fields=['accommodation', 'is_active'], name='accommodati_accommo_72e7e1_idx'),
        ),
        migrations.AddIndex(
            model_name='accommodationallocation',
            index=models.Index(fields=['primary_occupant', 'is_active'], name='accommodati_primary_1ef9c3_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['accommodation', 'status'], name='accommodati_accommo_8eb89a_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['requested_by', 'status'], name='accommodati_request_bdc845_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['priority', 'status'], name='accommodati_priorit_7c3573_idx'),
        ),
        migrations.AddIndex(
            model_name='utilityreading',
            index=models.Index(fields=['accommodation', 'utility_type', 'reading_date'], name='accommodati_accommo_58ae97_idx'),
        ),
        migrations.AddIndex(
            model_name='utilityreading',
            index=models.Index(fields=['allocation'], name='accommodati_allocat_edce48_idx'),
        ),
    ]
