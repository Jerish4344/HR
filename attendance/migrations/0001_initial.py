# Generated by Django 5.2.3 on 2025-06-25 12:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('check_out_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('half_day', 'Half Day'), ('on_leave', 'On Leave'), ('holiday', 'Holiday'), ('weekend', 'Weekend')], default='absent', max_length=20)),
                ('source', models.CharField(choices=[('web', 'Web'), ('mobile', 'Mobile App'), ('biometric', 'Biometric'), ('manual', 'Manual Entry'), ('qr_code', 'QR Code'), ('rfid', 'RFID Card')], default='web', max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, help_text='Latitude coordinate for check-in location', max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, help_text='Longitude coordinate for check-in location', max_digits=10, null=True)),
                ('check_out_latitude', models.DecimalField(blank=True, decimal_places=7, help_text='Latitude coordinate for check-out location', max_digits=10, null=True)),
                ('check_out_longitude', models.DecimalField(blank=True, decimal_places=7, help_text='Longitude coordinate for check-out location', max_digits=10, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_attendance', to='employees.employee')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='employees.employee')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-check_in_time'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceCorrection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('original_check_in', models.DateTimeField(blank=True, null=True)),
                ('original_check_out', models.DateTimeField(blank=True, null=True)),
                ('requested_check_in', models.DateTimeField(blank=True, null=True)),
                ('requested_check_out', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_attendance_corrections', to='employees.employee')),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corrections', to='attendance.attendance')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_correction_requests', to='employees.employee')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('break_duration', models.PositiveIntegerField(default=60, help_text='Break duration in minutes')),
                ('working_days', models.JSONField(default=list, help_text='List of working days (0=Monday, 6=Sunday)')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_night_shift', models.BooleanField(default=False, help_text='Whether this is a night shift')),
                ('grace_period', models.PositiveIntegerField(default=15, help_text='Grace period in minutes for late arrival')),
                ('early_exit_limit', models.PositiveIntegerField(default=15, help_text='Early exit limit in minutes')),
                ('minimum_hours', models.DecimalField(decimal_places=2, default=8.0, help_text='Minimum working hours required', max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='attendance',
            name='work_shift',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_records', to='attendance.workshift'),
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
                ('holiday_type', models.CharField(choices=[('national', 'National Holiday'), ('regional', 'Regional Holiday'), ('company', 'Company Holiday'), ('optional', 'Optional Holiday')], default='national', max_length=20)),
                ('is_recurring', models.BooleanField(default=False, help_text='Whether this holiday occurs every year on the same date')),
                ('applicable_regions', models.JSONField(blank=True, default=list, help_text='List of regions where this holiday is applicable')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date'],
                'indexes': [models.Index(fields=['date'], name='attendance__date_54d65e_idx'), models.Index(fields=['holiday_type'], name='attendance__holiday_e0514a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('leave_type', models.CharField(choices=[('casual', 'Casual Leave'), ('sick', 'Sick Leave'), ('earned', 'Earned Leave'), ('maternity', 'Maternity Leave'), ('paternity', 'Paternity Leave'), ('unpaid', 'Unpaid Leave'), ('comp_off', 'Compensatory Off'), ('bereavement', 'Bereavement Leave'), ('other', 'Other')], default='casual', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('half_day', models.BooleanField(default=False, help_text='Whether this is a half-day leave')),
                ('first_half', models.BooleanField(default=True, help_text='If half day, is it first half of the day?')),
                ('num_days', models.DecimalField(decimal_places=1, help_text='Number of leave days', max_digits=5)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('year', models.PositiveIntegerField(default=2025, help_text='Calendar year for leave accounting')),
                ('casual_leave_balance', models.DecimalField(decimal_places=1, default=0, help_text='Casual leave balance after this leave', max_digits=5)),
                ('sick_leave_balance', models.DecimalField(decimal_places=1, default=0, help_text='Sick leave balance after this leave', max_digits=5)),
                ('earned_leave_balance', models.DecimalField(decimal_places=1, default=0, help_text='Earned leave balance after this leave', max_digits=5)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to='employees.employee')),
                ('attachments', models.ManyToManyField(blank=True, related_name='leave_attachments', to='core.document')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaves', to='employees.employee')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date', '-created_at'],
                'indexes': [models.Index(fields=['employee', 'start_date'], name='attendance__employe_f6dc67_idx'), models.Index(fields=['status', 'start_date'], name='attendance__status_0ce4ae_idx'), models.Index(fields=['year'], name='attendance__year_50482a_idx')],
            },
        ),
        migrations.CreateModel(
            name='LeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField(default=2025, help_text='Calendar year for leave accounting')),
                ('casual_leave_total', models.DecimalField(decimal_places=1, default=0, help_text='Total casual leave allocated for the year', max_digits=5)),
                ('casual_leave_used', models.DecimalField(decimal_places=1, default=0, help_text='Casual leave used in the year', max_digits=5)),
                ('sick_leave_total', models.DecimalField(decimal_places=1, default=0, help_text='Total sick leave allocated for the year', max_digits=5)),
                ('sick_leave_used', models.DecimalField(decimal_places=1, default=0, help_text='Sick leave used in the year', max_digits=5)),
                ('earned_leave_total', models.DecimalField(decimal_places=1, default=0, help_text='Total earned leave allocated for the year', max_digits=5)),
                ('earned_leave_used', models.DecimalField(decimal_places=1, default=0, help_text='Earned leave used in the year', max_digits=5)),
                ('carried_forward', models.DecimalField(decimal_places=1, default=0, help_text='Leave carried forward from previous year', max_digits=5)),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to='employees.employee')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year'],
                'indexes': [models.Index(fields=['employee', 'year'], name='attendance__employe_785b64_idx')],
                'unique_together': {('employee', 'year')},
            },
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['employee', 'date'], name='attendance__employe_08d913_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['date', 'status'], name='attendance__date_3889e6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('employee', 'date')},
        ),
    ]
